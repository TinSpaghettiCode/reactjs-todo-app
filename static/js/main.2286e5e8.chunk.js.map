{"version":3,"sources":["components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["ButtonStyled","styled","Button","p","isCompleted","css","Todo","todo","onCheckBtnClick","onDeleteBtnClick","shouldFitContainer","iconAfter","className","onClick","id","primaryColor","name","TodoList","todoList","map","TODO_APP_STORAGE_KEY","App","useState","setTodoList","textInput","setTextInput","useEffect","storagedTodoList","localStorage","getItem","JSON","parse","setItem","stringify","onTextInputChange","useCallback","e","target","value","onAddBtnClick","v4","prevState","filter","placeholder","elemAfterInput","isDisabled","appearance","padding","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAMMA,EAAeC,YAAOC,IAAPD,CAAH,ogBAMZ,SAACE,GAAD,OACAA,EAAEC,aACFC,YADA,yEADA,IAsCS,SAASC,EAAT,GAA4D,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,iBACpD,OACE,cAACT,EAAD,CACEI,YAAaG,EAAKH,YAClBM,oBAAkB,EAClBC,UACGJ,EAAKH,YAKJ,sBACEQ,UAAU,cACVC,QAAS,kBAAMJ,EAAiBF,EAAKO,GAA5B,EAFX,SAIE,cAAC,IAAD,CAAWC,aAAa,cAR1B,sBAAMH,UAAU,aAAaC,QAAS,kBAAML,EAAgBD,EAAKO,GAA3B,EAAtC,SACE,cAAC,IAAD,CAAWC,aAAa,cANhC,SAkBGR,EAAKS,MAGX,CCtEc,SAASC,EAAT,GAIX,IAHFC,EAGC,EAHDA,SACAV,EAEC,EAFDA,gBACAC,EACC,EADDA,iBAEA,OACE,mCACGS,EAASC,KAAI,SAACZ,GAAD,OACZ,cAACD,EAAD,CAEEC,KAAMA,EACNC,gBAAiBA,EACjBC,iBAAkBA,GAHbF,EAAKO,GAFA,KAUnB,C,oBCdKM,EAAuB,WA6EdC,MA3Ef,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNJ,EADM,KACIK,EADJ,OAEqBD,mBAAS,IAF9B,mBAENE,EAFM,KAEKC,EAFL,KAIbC,qBAAU,WACR,IAAMC,EAAmBC,aAAaC,QAAQT,GAC1CO,GACFJ,EAAYO,KAAKC,MAAMJ,GAE1B,GAAE,IAEHD,qBAAU,WACRE,aAAaI,QAAQZ,EAAsBU,KAAKG,UAAUf,GAC3D,GAAE,CAACA,IAEJ,IAAMgB,EAAoBC,uBAAY,SAACC,GACrCX,EAAaW,EAAEC,OAAOC,MACvB,GAAE,IAEGC,EAAgBJ,uBACpB,SAACC,GAECb,EAAY,CACV,CAAET,GAAI0B,cAAMxB,KAAMQ,EAAWpB,aAAa,IADjC,mBAENc,KAGLO,EAAa,GACd,GACD,CAACD,EAAWN,IAGRV,EAAkB2B,uBAAY,SAACrB,GACnCS,GAAY,SAACkB,GAAD,OACVA,EAAUtB,KAAI,SAACZ,GAAD,OACZA,EAAKO,KAAOA,EAAZ,2BAAsBP,GAAtB,IAA4BH,aAAa,IAASG,CADtC,GADJ,GAKb,GAAE,IAEGE,EAAmB0B,uBACvB,SAACrB,GACCS,EAAYL,EAASwB,QAAO,SAACnC,GAAD,OAAUA,EAAKO,KAAOA,CAAtB,IAC7B,GACD,CAACI,IAGH,OACE,qCACE,8DACA,cAAC,IAAD,CACEF,KAAK,WACL2B,YAAY,uCACZC,eACE,cAAC,IAAD,CACEC,YAAarB,EACbsB,WAAW,UACXjC,QAAS0B,EAHX,qBAQFlC,IAAK,CAAE0C,QAAS,eAChBT,MAAOd,EACPwB,SAAUd,IAEZ,cAACjB,EAAD,CACEC,SAAUA,EACVV,gBAAiBA,EACjBC,iBAAkBA,MAIzB,EC5EDwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,Q","file":"static/js/main.2286e5e8.chunk.js","sourcesContent":["import Button from '@atlaskit/button';\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport CheckIcon from '@atlaskit/icon/glyph/check';\nimport TrashIcon from '@atlaskit/icon/glyph/trash';\n\nconst ButtonStyled = styled(Button)`\n  margin-top: 5px;\n  text-align: left;\n\n  &,\n  &:hover {\n    ${(p) =>\n      p.isCompleted &&\n      css`\n        text-decoration: line-through;\n      `}\n  }\n\n  &:hover {\n    .check-icon {\n      display: inline-block;\n    }\n  }\n\n  .check-icon {\n    display: none;\n\n    &:hover {\n      background-color: #e2e2e2;\n      border-radius: 3px;\n    }\n  }\n\n  &:hover {\n    .delete-icon {\n      display: inline-block;\n    }\n  }\n\n  .delete-icon {\n    display: none;\n\n    &:hover {\n      background-color: #e2e2e2;\n      border-radius: 3px;\n    }\n  }\n`;\n\nexport default function Todo({ todo, onCheckBtnClick, onDeleteBtnClick }) {\n  return (\n    <ButtonStyled\n      isCompleted={todo.isCompleted}\n      shouldFitContainer\n      iconAfter={\n        !todo.isCompleted ? (\n          <span className=\"check-icon\" onClick={() => onCheckBtnClick(todo.id)}>\n            <CheckIcon primaryColor=\"#0AC200\" />\n          </span>\n        ) : (\n          <span\n            className=\"delete-icon\"\n            onClick={() => onDeleteBtnClick(todo.id)}\n          >\n            <TrashIcon primaryColor=\"#C20600\" />\n          </span>\n        )\n      }\n    >\n      {todo.name}\n    </ButtonStyled>\n  );\n}\n","import React from 'react';\nimport Todo from './Todo';\n\nexport default function TodoList({\n  todoList,\n  onCheckBtnClick,\n  onDeleteBtnClick,\n}) {\n  return (\n    <>\n      {todoList.map((todo) => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          onCheckBtnClick={onCheckBtnClick}\n          onDeleteBtnClick={onDeleteBtnClick}\n        />\n      ))}\n    </>\n  );\n}\n","import TodoList from './components/TodoList';\nimport Textfield from '@atlaskit/textfield';\nimport Button from '@atlaskit/button';\nimport { useCallback, useState, useEffect } from 'react';\nimport { v4 } from 'uuid';\n\nconst TODO_APP_STORAGE_KEY = 'TODO_APP';\n\nfunction App() {\n  const [todoList, setTodoList] = useState([]);\n  const [textInput, setTextInput] = useState('');\n\n  useEffect(() => {\n    const storagedTodoList = localStorage.getItem(TODO_APP_STORAGE_KEY);\n    if (storagedTodoList) {\n      setTodoList(JSON.parse(storagedTodoList));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(TODO_APP_STORAGE_KEY, JSON.stringify(todoList));\n  }, [todoList]);\n\n  const onTextInputChange = useCallback((e) => {\n    setTextInput(e.target.value);\n  }, []);\n\n  const onAddBtnClick = useCallback(\n    (e) => {\n      // them text input vao danh sach todoList\n      setTodoList([\n        { id: v4(), name: textInput, isCompleted: false },\n        ...todoList,\n      ]);\n\n      setTextInput('');\n    },\n    [textInput, todoList]\n  );\n\n  const onCheckBtnClick = useCallback((id) => {\n    setTodoList((prevState) =>\n      prevState.map((todo) =>\n        todo.id === id ? { ...todo, isCompleted: true } : todo\n      )\n    );\n  }, []);\n\n  const onDeleteBtnClick = useCallback(\n    (id) => {\n      setTodoList(todoList.filter((todo) => todo.id !== id));\n    },\n    [todoList]\n  );\n\n  return (\n    <>\n      <h3>Danh sách cần làm</h3>\n      <Textfield\n        name=\"add-todo\"\n        placeholder=\"Thêm việc cần làm...\"\n        elemAfterInput={\n          <Button\n            isDisabled={!textInput}\n            appearance=\"primary\"\n            onClick={onAddBtnClick}\n          >\n            Thêm\n          </Button>\n        }\n        css={{ padding: '2px 4px 2px' }}\n        value={textInput}\n        onChange={onTextInputChange}\n      ></Textfield>\n      <TodoList\n        todoList={todoList}\n        onCheckBtnClick={onCheckBtnClick}\n        onDeleteBtnClick={onDeleteBtnClick}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}